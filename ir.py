#
# Class for Infra Red distance sensor SHARP 2Y0A21xx and ADC (in this case MCP3008)
# I highly reccomend placing a large capacitor (eg 2200uF) across VIN and GND
# to reduce the significant amount of noise generated by the sensor
#

import spidev

class IR:

	ADC_CHANNEL = 0

	def __init__(self, bus=0, device_cs=1):
		self.inp = spidev.SpiDev()
		self.inp.open(bus, device_cs)

	def get_val(self):   #read analogue value from ADC (MCP3008)
		r = self.inp.xfer2([1,(8+self.ADC_CHANNEL)<<4,0])
		v = ((r[1]&3) << 8) + r[2]
		return v

	def get_dist(self, reads=10):  #Get average of several values for accuracy
		r = []
		for i in range (0,reads):
			r.append(self.get_val())
		a = sum(r)/10.0
		v = (a/1023.0)*3.3
		d = 16.2537 * v**4 - 129.893 * v**3 + 382.268 * v**2 - 512.611 * v + 306.439
		cm = int(round(d))
		val = '%d cm' % cm
		pc = int(cm/1.5)
		return pc

